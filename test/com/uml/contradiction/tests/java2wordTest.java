package com.uml.contradiction.tests;

import org.junit.Test;

import word.api.interfaces.IDocument;
import word.utils.TestUtils;
import word.utils.Utils;
import word.w2004.Document2004;
import word.w2004.Document2004.Encoding;
import word.w2004.elements.BreakLine;
import word.w2004.elements.Heading1;
import word.w2004.elements.Heading2;
import word.w2004.elements.Heading3;
import word.w2004.elements.HyperLink;
import word.w2004.elements.Image;
import word.w2004.elements.PageBreak;
import word.w2004.elements.Paragraph;
import word.w2004.elements.ParagraphPiece;
import word.w2004.elements.Table;
import word.w2004.elements.tableElements.TableEle;
import word.w2004.style.Font;
import word.w2004.style.HeadingStyle.Align;

public class java2wordTest {
	@Test
	public void t(){

        IDocument myDoc = new Document2004();
        // myDoc.setPageOrientationLandscape();
        // default is Portrait be can be changed.
        myDoc.encoding(Encoding.UTF_8); //or ISO8859-1. Default is UTF-8

        myDoc.addEle(BreakLine.times(1).create()); // this is one breakline

        // Headings
        myDoc.addEle(Heading1.with("===== Java2word ======").create());
        myDoc.addEle(Heading2.with("===== Headings ======").create());
        myDoc.addEle(Paragraph
                .with("This doc has been generated by the unit test testJava2wordAllInOne() in the class DocumentTest2004Test.java.")
                .create());
        myDoc.addEle(BreakLine.times(1).create());

        myDoc.addEle(Paragraph
                .with("I will try to use a little bit of everything in the API Java2word. "
                        + "I realised that is very dificult to keep the doucmentation updated "
                        + "so this is where I will demostrate how to do some cool things with Java2word!")
                .create());

        
        TestUtils.createLocalDoc(myDoc.getContent());
	}
}
